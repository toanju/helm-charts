apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  labels:
    {{- include "zigbee2mqtt.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zigbee2mqtt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-config
          image: busybox:latest
          args:
            - >-
              set -e;
              if [ -f /data/configuration.yaml ]; then
                echo "Config exists. Skipping";
              else
                cp /config/configuration.yaml /data/;
              fi;
          command: [ 'sh', '-c' ]
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data
              name: data-volume
            - mountPath: /config
              name: config-volume
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.zigbee2mqtt.env }}
          env:
{{ toYaml .Values.zigbee2mqtt.env | indent 12}}
          {{- end }}
          # frontend expected to be running
          {{- if .Values.zigbee2mqtt.config.frontend }}
          ports:
            - name: http
              containerPort: {{ .Values.zigbee2mqtt.config.frontend.port | default 8080 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.zigbee2mqtt.config.frontend.port | default 8080 }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.zigbee2mqtt.config.frontend.port | default 8080 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /app/data
              name: data-volume
            - mountPath: {{ .Values.zigbee2mqtt.config.serial.port | default "/dev/ttyUSB0" }}
              name: serial-device
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "zigbee2mqtt.fullname" . }}-configmap
        - name: data-volume
          {{- if .Values.persistence.enabled }}
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{ else }}{{ include "zigbee2mqtt.fullname" . }}-pvc{{ end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: serial-device
          hostPath:
            path: {{ .Values.zigbee2mqtt.hostSerialDevice | default "/dev/ttyUSB0" }}
